language: cpp


env:
  global:
    - LANG="zh_CN.UTF-8"
    - CMAKE_PREFIX=$HOME/prebuilt/cmake ;
    - CMAKE_VERSION=3.5.2 ;
matrix:
  include:
    - os: osx
      env: USE_CC=clang USE_CXX=clang++
    - os: osx
      env: USE_CC=gcc USE_CXX=g++
    - os: linux
      dist: trusty
      sudo: required
      env: USE_CC=gcc USE_CXX=g++
    - os: linux
      dist: trusty
      sudo: required
      env: USE_CC=gcc-4.4 USE_CXX=g++-4.4
    - os: linux
      dist: trusty
      sudo: required
      env: USE_CC=gcc-4.9 USE_CXX=g++-4.9
    - os: linux
      dist: trusty
      sudo: required
      env: USE_CC=gcc-6 USE_CXX=g++-6
    - os: linux
      dist: trusty
      sudo: required
      env: USE_CC=clang USE_CXX=clang++
    # - os: linux
    #   dist: trusty
    #   sudo: required
    #   env: USE_CC=clang-3.8 USE_CXX=clang++-3.8

addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
      # - sourceline: 'deb http://apt.llvm.org/trusty/ llvm-toolchain-trusty-3.8 main'
      #   key_url: 'http://apt.llvm.org/llvm-snapshot.gpg.key'

    packages:
      - g++-4.4
      - g++-4.4-multilib
      - gcc-4.4
      - gcc-4.4-multilib
      - gcc-4.9
      - gcc-4.9-multilib
      - g++-4.9
      - g++-4.9-multilib
      - gcc-6
      - gcc-6-multilib
      - g++-6
      - g++-6-multilib
      - clang
      ## - libc++1
      ## - libc++-dev
      ## - libc++abi1
      ## - libc++abi-dev
      # - clang-3.8
      # - libclang-common-3.8-dev
      # - libclang-3.8-dev

before_script:
  - REPO_DIR=$PWD;
  - cd /tmp
  - if [ ! -e "$CMAKE_PREFIX/bin/cmake" ]; then
        mkdir -p "$CMAKE_PREFIX";
        wget -c "https://github.com/Kitware/CMake/archive/v$CMAKE_VERSION.tar.gz" -O CMake-$CMAKE_VERSION.tar.gz ;
        tar -xvf CMake-$CMAKE_VERSION.tar.gz;
        cd CMake-$CMAKE_VERSION ;
        ./bootstrap --prefix=$CMAKE_PREFIX;
        make -j4 install;
        cd -;
        rm -rf CMake-$CMAKE_VERSION CMake-$CMAKE_VERSION.tar.gz;
    fi
  - cd "$REPO_DIR";

after_success:
  - bin/hiredis-happ-test
  
script: 
  - export CC=$USE_CC
  - export CXX=$USE_CXX
  - REPO_DIR=$PWD;
  - mkdir -p tools && cd tools
  - mkdir -p $REPO_DIR/build && cd $REPO_DIR/build ;
  - echo "$CMAKE_PREFIX/bin/cmake .. -DPROJECT_ENABLE_UNITTEST=ON -DPROJECT_ENABLE_SAMPLE=ON -DCMAKE_C_COMPILER=$USE_CC -DCMAKE_CXX_COMPILER=$USE_CXX" ;
  - $CMAKE_PREFIX/bin/cmake .. -DPROJECT_ENABLE_UNITTEST=ON -DPROJECT_ENABLE_SAMPLE=ON -DCMAKE_C_COMPILER=$USE_CC -DCMAKE_CXX_COMPILER=$USE_CXX ;
  - make -j4 ;

install: true

cache: 
    apt: true
    directories:
    - $CMAKE_PREFIX
    
branches:
  only:
    - master

notifications:
  email: false
  irc:
    template:
      - "%{repository}/%{branch} (%{commit} - %{author}): %{build_url}: %{message}"
